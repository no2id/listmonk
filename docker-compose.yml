# docker-compose for listmonk, postgres, nginx, certbot
# All LISTMONK_* env variables also support the LISTMONK_*_FILE pattern for loading secrets from files with Docker secrets and Podman
# eg: LISTMONK_ADMIN_USER -> LISTMONK_ADMIN_USER_FILE=/path/to/file_with_value

x-db-credentials: &db-credentials                             # Use the default POSTGRES_ credentials if they're available or simply default to "listmonk"
  POSTGRES_USER: &db-user listmonk                            # for database user, password, and database name
  POSTGRES_PASSWORD: &db-password listmonk
  POSTGRES_DB: &db-name listmonk

services:
  # listmonk app
  listmonk-app:
    image: listmonk/listmonk:latest
    container_name: listmonk_app
    restart: unless-stopped
    volumes:
      - ./uploads:/listmonk/uploads:rw                            # Mount an uploads directory on the host to /listmonk/uploads inside the container.
                                                                  # To use this, change directory path in Admin -> Settings -> Media to /listmonk/uploads
      - ./upstream/listmonk/static:/listmonk/static

    ports:
      - "9000:9000"                                           # To change the externally exposed port, change to: $custom_port:9000
    networks:
      - listmonk
    hostname: lists.no2id.uk                                  # Recommend using FQDN for hostname
    depends_on:
      - listmonk-pgdb
    command: [sh, -c, "./listmonk --install --idempotent --yes --config '' && ./listmonk --upgrade --yes --config '' && ./listmonk --config ''"]
                                                              # --config (file) param is set to empty so that listmonk only uses the env vars (below) for config.
                                                              # --install --idempotent ensures that DB installation happens only once on an empty DB, on the first ever start.
                                                              # --upgrade automatically runs any DB migrations when a new image is pulled.

    environment:                                              # The same params as in config.toml are passed as env vars here.
      LISTMONK_app__address: 0.0.0.0:9000
      LISTMONK_db__user: *db-user
      LISTMONK_db__password: *db-password
      LISTMONK_db__database: *db-name
      LISTMONK_db__host: listmonk_pgdb
      LISTMONK_db__port: 5432
      LISTMONK_db__ssl_mode: disable
      LISTMONK_db__max_open: 25
      LISTMONK_db__max_idle: 25
      LISTMONK_db__max_lifetime: 300s
      TZ: Europe/London
      LISTMONK_ADMIN_USER: ${LISTMONK_ADMIN_USER:-}           # If these (optional) are set during the first `docker compose up`, then the Super Admin user is automatically created.
      LISTMONK_ADMIN_PASSWORD: ${LISTMONK_ADMIN_PASSWORD:-}   # Otherwise, the user can be setup on the web app after the first visit to http://localhost:9000
  
# Postgres database
listmonk-pgdb:
  image: postgres:18-alpine
  container_name: listmonk_pgdb
  restart: unless-stopped
  ports:
    - "5432:5432"
  networks:
    - listmonk
  environment:
    <<: *db-credentials
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U listmonk"]
    interval: 10s
    timeout: 5s
    retries: 6
  volumes:
    - type: volume
      source: listmonk-pg-data
      target: /var/lib/postgresql/data

  nginx:
    image: nginx:mainline-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./etc/nginx:/etc/nginx/conf.d
      - ./etc/certbot:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - listmonk
    depends_on:
      - listmonk-app
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./etc/certbot:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - listmonk
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/certbot --email postmaster@no2id.uk --agree-tos --no-eff-email --staging -d lists.no2id.uk


networks:
  listmonk:

volumes:
  listmonk-pg-data: